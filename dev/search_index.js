var documenterSearchIndex = {"docs":
[{"location":"function_index/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"function_index/","page":"Index","title":"Index","text":"","category":"page"},{"location":"function_index/","page":"Index","title":"Index","text":"Modules = [DiffFusionServer]","category":"page"},{"location":"function_index/#DiffFusionServer._INFO_STRING","page":"Index","title":"DiffFusionServer._INFO_STRING","text":"const _INFO_STRING\n\nAn info string with API details.\n\n\n\n\n\n","category":"constant"},{"location":"function_index/#DiffFusionServer._NO_HTTP_ERROR","page":"Index","title":"DiffFusionServer._NO_HTTP_ERROR","text":"const _NO_HTTP_ERROR\n\nDefault return status code.\n\n\n\n\n\n","category":"constant"},{"location":"function_index/#DiffFusionServer.api_get_aliases-Tuple{HTTP.Messages.Request, AbstractDict}","page":"Index","title":"DiffFusionServer.api_get_aliases","text":"Return all aliases from the repository in body of response.\n\n\n\n\n\n","category":"method"},{"location":"function_index/#DiffFusionServer.api_get_info-Tuple{HTTP.Messages.Request}","page":"Index","title":"DiffFusionServer.api_get_info","text":"api_get_info(req::HTTP.Request)\n\nReturn an info string about the API as response.\n\n\n\n\n\n","category":"method"},{"location":"function_index/#DiffFusionServer.initial_repository-Tuple{}","page":"Index","title":"DiffFusionServer.initial_repository","text":"initial_repository()\n\nCreate an object repository and initialise with some static objects.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = DiffFusionServer","category":"page"},{"location":"#DiffFusionServer","page":"Home","title":"DiffFusionServer","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DiffFusionServer.","category":"page"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The DiffFusionServer package uses HTTP and Sockets packages. These packages need to be added to the current project.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url=\"https://github.com/frame-consulting/DiffFusionServer.jl\")\nPkg.add(\"HTTP\")\nPkg.add(\"Sockets\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Start a HTTP server.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using DiffFusionServer\nusing HTTP\nusing Sockets\n\nrouter = DiffFusionServer.router().router\nserver = HTTP.serve!(router, Sockets.localhost, 80)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now you can visit the end point localhost with your browser. This should display an info text of the API.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Alternatively, you can query the server via HTTP in Julia.","category":"page"},{"location":"","page":"Home","title":"Home","text":"resp = HTTP.get(\"http://localhost/api/v1/info\")\ndisplay(resp)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Finally, you can close the server via","category":"page"},{"location":"","page":"Home","title":"Home","text":"close(server)","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is a summary of the API to serve DiffFusion functionality via HTTP.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The API implements an object repository. Individual objects are accessible via their 'alias' key.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Endpoints:","category":"page"},{"location":"","page":"Home","title":"Home","text":"GET: [api_path]/[version]/info","category":"page"},{"location":"","page":"Home","title":"Home","text":"Return this info message.","category":"page"},{"location":"","page":"Home","title":"Home","text":"GET: [api_path]/[version]/aliases","category":"page"},{"location":"","page":"Home","title":"Home","text":"Return the list of aliases in object repository.","category":"page"},{"location":"","page":"Home","title":"Home","text":"POST: [api_path]/[version]/ops","category":"page"},{"location":"","page":"Home","title":"Home","text":"This method implements the main API logic:\nLoad request body into OrderedDict 'd'.\nRetrieve 'alias' field from  request header.\nRetrieve operation field 'op' from request header.\nProcess OrderedDict 'd' according to operation 'op'.\nStore resulting object in object repository with key 'alias'.\nOperations 'op' are\n'COPY': copy body as OrderedDict to repository,\n'BUILD': de-serialise object and store in repository","category":"page"},{"location":"","page":"Home","title":"Home","text":"POST: [api_path]/[version]/bulk","category":"page"},{"location":"","page":"Home","title":"Home","text":"This method implements the POST method for a list of object.\nRequest body contains a list of two-element lists.\nEach two-element list contains the object 'alias' and the dictionary specifying the object creation.\nObject creation follows the method for single-object POST method.","category":"page"},{"location":"","page":"Home","title":"Home","text":"GET: [api_path]/[version]/ops","category":"page"},{"location":"","page":"Home","title":"Home","text":"Retrieve 'alias' field from  request header, serialise object from repository and return via body.","category":"page"},{"location":"","page":"Home","title":"Home","text":"GET: [api_path]/[version]/bulk","category":"page"},{"location":"","page":"Home","title":"Home","text":"This method implements the GET method for a list of objects.\nRequest body contains a list of 'alias' keys.\nResponse body contains a list of serialised objects.","category":"page"},{"location":"","page":"Home","title":"Home","text":"DELETE: [api_path]/[version]/ops/","category":"page"},{"location":"","page":"Home","title":"Home","text":"Retrieve 'alias' field from  request header and delete the object with given alias.","category":"page"}]
}
